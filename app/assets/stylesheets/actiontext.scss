/*
 * Provides a drop-in pointer for the default Trix stylesheet that will format the toolbar and
 * the trix-editor content (whether displayed or under editing). Feel free to incorporate this
 * inclusion directly in any other asset bundle and remove this file.
 *
 *= require trix
*/

/*
 * We need to override trix.css’s image gallery styles to accommodate the
 * <action-text-attachment> element we wrap around attachments. Otherwise,
 * images in galleries will be squished by the max-width: 33%; rule.
*/
.trix-content .attachment-gallery > action-text-attachment,
.trix-content .attachment-gallery > .attachment {
  flex: 1 0 33%;
  padding: 0 0.5em;
  max-width: 33%;
}

.trix-content .attachment-gallery.attachment-gallery--2 > action-text-attachment,
.trix-content .attachment-gallery.attachment-gallery--2 > .attachment, .trix-content .attachment-gallery.attachment-gallery--4 > action-text-attachment,
.trix-content .attachment-gallery.attachment-gallery--4 > .attachment {
  flex-basis: 50%;
  max-width: 50%;
}

.trix-content action-text-attachment .attachment {
  padding: 0 !important;
  max-width: 100% !important;
}

/*
 * Custom Styles for Action Text
 * -------------------------------------------------- */

/* Action Textのコンテナ全体 */
.trix-content {
  line-height: 1.6;
}

/* 単体で添付された画像を囲む <figure> 要素 */
.trix-content figure.attachment {
  /* 画像の最大表示幅 */
  max-width: 300px !important; /* お好みのサイズに調整してください */
  
  /* 中央寄せ */
  margin: 2rem auto !important; 
}

/* 単体の画像そのもの <img> */
.trix-content figure.attachment img {
  width: 100% !important; 
  height: auto;
  border-radius: 8px;
}

/* 画像の下のキャプション（ファイル名とサイズ）を非表示にする */
.trix-content figure.attachment figcaption {
  display: none !important;
}

/*
 * 複数画像（ギャラリー）表示時のスタイル
 * -------------------------------------------------- */
.trix-content .attachment-gallery {
  display: flex !important;
  flex-wrap: wrap !important;
  gap: 1rem !important; /* 画像間の余白 */
  margin: 2rem 0 !important;
}

/* ギャラリー内の各画像を囲む <figure> 要素 */
.trix-content .attachment-gallery figure.attachment {
  /* ギャラリー内のfigureは中央寄せマージンをリセット */
  margin: 0 !important;
  
  /* 2列表示の場合の幅を計算 (gapの半分を引く) */
  flex-basis: calc(50% - 0.5rem) !important;
  max-width: calc(50% - 0.5rem) !important;
}

/* 画面が小さいとき (768px以下) は1列にするレスポンシブ対応 */
@media (max-width: 768px) {
  .trix-content .attachment-gallery figure.attachment {
    flex-basis: 100% !important;
    max-width: 100% !important;
  }
}